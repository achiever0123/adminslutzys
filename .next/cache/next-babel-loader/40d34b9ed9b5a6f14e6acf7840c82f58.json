{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport login from 'pages/auth/login';\nimport { loginSuccess, loginFail, logoutSuccess } from './actions';\nvar initialState = {\n  loggedIn: false,\n  authUser: null\n};\nvar authReducers = [{\n  on: login,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: {\n        requesting: false,\n        error: null\n      }\n    });\n  }\n}, {\n  on: loginSuccess,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: true,\n      login: {\n        requesting: false,\n        error: null,\n        data: data.payload,\n        success: true\n      }\n    });\n  }\n}, {\n  on: loginFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loggedIn: false,\n      login: {\n        requesting: false,\n        error: data.payload,\n        success: false\n      }\n    });\n  }\n}, {\n  on: logoutSuccess,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      logout: {\n        success: true\n      },\n      login: {\n        loginAuth: {\n          success: false,\n          error: null\n        }\n      },\n      loggedIn: false,\n      authUser: null\n    });\n  }\n}];\nexport default merge({}, createReducers('auth', [authReducers], initialState));","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/redux/auth/reducers.ts"],"names":["merge","createReducers","login","loginSuccess","loginFail","logoutSuccess","initialState","loggedIn","authUser","authReducers","on","reducer","state","requesting","error","data","payload","success","logout","loginAuth"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,aAAlC,QAAuD,WAAvD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAER,KADN;AAEES,EAAAA,OAFF,mBAEUC,KAFV,EAEsB;AAClB,2CACKA,KADL;AAEEV,MAAAA,KAAK,EAAE;AACLW,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,KAAK,EAAE;AAFF;AAFT;AAOD;AAVH,CADmB,EAanB;AACEJ,EAAAA,EAAE,EAAEP,YADN;AAEEQ,EAAAA,OAFF,mBAEUC,KAFV,EAEsBG,IAFtB,EAEiC;AAC7B,2CACKH,KADL;AAEEL,MAAAA,QAAQ,EAAE,IAFZ;AAGEL,MAAAA,KAAK,EAAE;AACLW,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,IAAI,EAAEA,IAAI,CAACC,OAHN;AAILC,QAAAA,OAAO,EAAE;AAJJ;AAHT;AAUD;AAbH,CAbmB,EA4BnB;AACEP,EAAAA,EAAE,EAAEN,SADN;AAEEO,EAAAA,OAFF,mBAEUC,KAFV,EAEsBG,IAFtB,EAEiC;AAC7B,2CACKH,KADL;AAEEL,MAAAA,QAAQ,EAAE,KAFZ;AAGEL,MAAAA,KAAK,EAAE;AACLW,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,KAAK,EAAEC,IAAI,CAACC,OAFP;AAGLC,QAAAA,OAAO,EAAE;AAHJ;AAHT;AASD;AAZH,CA5BmB,EA0CnB;AACEP,EAAAA,EAAE,EAAEL,aADN;AAEEM,EAAAA,OAFF,mBAEUC,KAFV,EAEsB;AAClB,2CACKA,KADL;AAEEM,MAAAA,MAAM,EAAE;AACND,QAAAA,OAAO,EAAE;AADH,OAFV;AAKEf,MAAAA,KAAK,EAAE;AACLiB,QAAAA,SAAS,EAAE;AACTF,UAAAA,OAAO,EAAE,KADA;AAETH,UAAAA,KAAK,EAAE;AAFE;AADN,OALT;AAWEP,MAAAA,QAAQ,EAAE,KAXZ;AAYEC,MAAAA,QAAQ,EAAE;AAZZ;AAcD;AAjBH,CA1CmB,CAArB;AA+DA,eAAeR,KAAK,CAAC,EAAD,EAAKC,cAAc,CAAC,MAAD,EAAS,CAACQ,YAAD,CAAT,EAAyBH,YAAzB,CAAnB,CAApB","sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport login from 'pages/auth/login';\nimport { loginSuccess, loginFail, logoutSuccess } from './actions';\n\nconst initialState = {\n  loggedIn: false,\n  authUser: null\n};\n\nconst authReducers = [\n  {\n    on: login,\n    reducer(state: any) {\n      return {\n        ...state,\n        login: {\n          requesting: false,\n          error: null\n        }\n      };\n    }\n  },\n  {\n    on: loginSuccess,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: true,\n        login: {\n          requesting: false,\n          error: null,\n          data: data.payload,\n          success: true\n        }\n      };\n    }\n  },\n  {\n    on: loginFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        loggedIn: false,\n        login: {\n          requesting: false,\n          error: data.payload,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: logoutSuccess,\n    reducer(state: any) {\n      return {\n        ...state,\n        logout: {\n          success: true\n        },\n        login: {\n          loginAuth: {\n            success: false,\n            error: null\n          }\n        },\n        loggedIn: false,\n        authUser: null\n      };\n    }\n  }\n];\n\nexport default merge({}, createReducers('auth', [authReducers], initialState));\n"]},"metadata":{},"sourceType":"module"}