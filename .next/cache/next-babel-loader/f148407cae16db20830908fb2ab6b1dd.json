{"ast":null,"code":"import { getGlobalConfig } from 'src/services';\nimport { APIRequest } from './api-request';\nexport class SettingService extends APIRequest {\n  public() {\n    return this.get(this.buildUrl('/settings/public'));\n  }\n\n  all(group = '') {\n    return this.get(this.buildUrl('/admin/settings', {\n      group\n    }));\n  }\n\n  update(key, value) {\n    return this.put(`/admin/settings/${key}`, {\n      value\n    });\n  }\n\n  getFileUploadUrl() {\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/settings/files/upload`;\n  }\n\n  verifyMailer() {\n    return this.post('/mailer/verify');\n  }\n\n}\nexport const settingService = new SettingService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/setting.service.ts"],"names":["getGlobalConfig","APIRequest","SettingService","public","get","buildUrl","all","group","update","key","value","put","getFileUploadUrl","NEXT_PUBLIC_API_ENDPOINT","verifyMailer","post","settingService"],"mappings":"AACA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,UAAT,QAAsC,eAAtC;AAEA,OAAO,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AAC7CE,EAAAA,MAAM,GAAiC;AACrC,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,kBAAd,CAAT,CAAP;AACD;;AAEDC,EAAAA,GAAG,CAACC,KAAK,GAAG,EAAT,EAA2C;AAC5C,WAAO,KAAKH,GAAL,CAAS,KAAKC,QAAL,CAAc,iBAAd,EAAiC;AAAEE,MAAAA;AAAF,KAAjC,CAAT,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,GAAD,EAAcC,KAAd,EAA0B;AAC9B,WAAO,KAAKC,GAAL,CAAU,mBAAkBF,GAAI,EAAhC,EAAmC;AAAEC,MAAAA;AAAF,KAAnC,CAAP;AACD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,WAAQ,GAAEZ,eAAe,GAAGa,wBAAyB,8BAArD;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKC,IAAL,CAAU,gBAAV,CAAP;AACD;;AAnB4C;AAsB/C,OAAO,MAAMC,cAAc,GAAG,IAAId,cAAJ,EAAvB","sourcesContent":["import { ISetting } from 'src/interfaces';\nimport { getGlobalConfig } from 'src/services';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class SettingService extends APIRequest {\n  public(): Promise<IResponse<ISetting>> {\n    return this.get(this.buildUrl('/settings/public'));\n  }\n\n  all(group = ''): Promise<IResponse<ISetting>> {\n    return this.get(this.buildUrl('/admin/settings', { group }));\n  }\n\n  update(key: string, value: any) {\n    return this.put(`/admin/settings/${key}`, { value });\n  }\n\n  getFileUploadUrl() {\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/settings/files/upload`;\n  }\n\n  verifyMailer() {\n    return this.post('/mailer/verify');\n  }\n}\n\nexport const settingService = new SettingService();\n"]},"metadata":{},"sourceType":"module"}