{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class VideoService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/admin/performer-assets/videos/search', query));\n  }\n\n  findById(id) {\n    return this.get(`/admin/performer-assets/videos/${id}/view`);\n  }\n\n  update(id, files, payload, onProgress) {\n    return this.upload(`/admin/performer-assets/videos/edit/${id}`, files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  uploadVideo(files, payload, onProgress) {\n    return this.upload('/admin/performer-assets/videos/upload', files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  delete(id) {\n    return this.del(`/admin/performer-assets/videos/${id}`);\n  }\n\n}\nexport const videoService = new VideoService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/video.service.ts"],"names":["APIRequest","VideoService","search","query","get","buildUrl","findById","id","update","files","payload","onProgress","upload","customData","uploadVideo","delete","del","videoService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,YAAN,SAA2BD,UAA3B,CAAsC;AAC3CE,EAAAA,MAAM,CAACC,KAAD,EAAiC;AACrC,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,uCAAd,EAAuDF,KAAvD,CADK,CAAP;AAGD;;AAEDG,EAAAA,QAAQ,CAACC,EAAD,EAAa;AACnB,WAAO,KAAKH,GAAL,CAAU,kCAAiCG,EAAG,OAA9C,CAAP;AACD;;AAEDC,EAAAA,MAAM,CACJD,EADI,EAEJE,KAFI,EAGJC,OAHI,EAIJC,UAJI,EAKJ;AACA,WAAO,KAAKC,MAAL,CAAa,uCAAsCL,EAAG,EAAtD,EAAyDE,KAAzD,EAAgE;AACrEE,MAAAA,UADqE;AAErEE,MAAAA,UAAU,EAAEH;AAFyD,KAAhE,CAAP;AAID;;AAEDI,EAAAA,WAAW,CACTL,KADS,EAETC,OAFS,EAGTC,UAHS,EAIT;AACA,WAAO,KAAKC,MAAL,CAAY,uCAAZ,EAAqDH,KAArD,EAA4D;AACjEE,MAAAA,UADiE;AAEjEE,MAAAA,UAAU,EAAEH;AAFqD,KAA5D,CAAP;AAID;;AAEDK,EAAAA,MAAM,CAACR,EAAD,EAAa;AACjB,WAAO,KAAKS,GAAL,CAAU,kCAAiCT,EAAG,EAA9C,CAAP;AACD;;AApC0C;AAuC7C,OAAO,MAAMU,YAAY,GAAG,IAAIhB,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class VideoService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/admin/performer-assets/videos/search', query)\n    );\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/performer-assets/videos/${id}/view`);\n  }\n\n  update(\n    id: string,\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload(`/admin/performer-assets/videos/edit/${id}`, files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  uploadVideo(\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload('/admin/performer-assets/videos/upload', files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  delete(id: string) {\n    return this.del(`/admin/performer-assets/videos/${id}`);\n  }\n}\n\nexport const videoService = new VideoService();\n"]},"metadata":{},"sourceType":"module"}