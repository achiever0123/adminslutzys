{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class PhotoService extends APIRequest {\n  uploadPhoto(file, payload, onProgress) {\n    return this.upload('/admin/performer-assets/photos/upload', [{\n      fieldname: 'photo',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  search(query) {\n    return this.get(this.buildUrl('/admin/performer-assets/photos/search', query));\n  }\n\n  findById(id) {\n    return this.get(`/admin/performer-assets/photos/${id}/view`);\n  }\n\n  update(id, payload) {\n    return this.put(`/admin/performer-assets/photos/${id}`, payload);\n  }\n\n  delete(id) {\n    return this.del(`/admin/performer-assets/photos/${id}`);\n  }\n\n}\nexport const photoService = new PhotoService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/photo.service.ts"],"names":["APIRequest","PhotoService","uploadPhoto","file","payload","onProgress","upload","fieldname","customData","search","query","get","buildUrl","findById","id","update","put","delete","del","photoService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,YAAN,SAA2BD,UAA3B,CAAsC;AAC3CE,EAAAA,WAAW,CAACC,IAAD,EAAaC,OAAb,EAA2BC,UAA3B,EAAkD;AAC3D,WAAO,KAAKC,MAAL,CACL,uCADK,EAEL,CACE;AACEC,MAAAA,SAAS,EAAE,OADb;AAEEJ,MAAAA;AAFF,KADF,CAFK,EAQL;AACEE,MAAAA,UADF;AAEEG,MAAAA,UAAU,EAAEJ;AAFd,KARK,CAAP;AAaD;;AAEDK,EAAAA,MAAM,CAACC,KAAD,EAAiC;AACrC,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,uCAAd,EAAuDF,KAAvD,CADK,CAAP;AAGD;;AAEDG,EAAAA,QAAQ,CAACC,EAAD,EAAa;AACnB,WAAO,KAAKH,GAAL,CAAU,kCAAiCG,EAAG,OAA9C,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACD,EAAD,EAAaV,OAAb,EAA2B;AAC/B,WAAO,KAAKY,GAAL,CAAU,kCAAiCF,EAAG,EAA9C,EAAiDV,OAAjD,CAAP;AACD;;AAEDa,EAAAA,MAAM,CAACH,EAAD,EAAa;AACjB,WAAO,KAAKI,GAAL,CAAU,kCAAiCJ,EAAG,EAA9C,CAAP;AACD;;AAjC0C;AAoC7C,OAAO,MAAMK,YAAY,GAAG,IAAIlB,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class PhotoService extends APIRequest {\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/admin/performer-assets/photos/upload',\n      [\n        {\n          fieldname: 'photo',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/admin/performer-assets/photos/search', query)\n    );\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/performer-assets/photos/${id}/view`);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/admin/performer-assets/photos/${id}`, payload);\n  }\n\n  delete(id: string) {\n    return this.del(`/admin/performer-assets/photos/${id}`);\n  }\n}\n\nexport const photoService = new PhotoService();\n"]},"metadata":{},"sourceType":"module"}