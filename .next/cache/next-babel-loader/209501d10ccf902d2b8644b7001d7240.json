{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class PerformerCategoryService extends APIRequest {\n  create(payload) {\n    return this.post('/admin/performer-categories', payload);\n  }\n\n  search(query) {\n    return this.get(this.buildUrl('/admin/performer-categories/search', query));\n  }\n\n  findById(id) {\n    return this.get(`/admin/performer-categories/${id}/view`);\n  }\n\n  update(id, payload) {\n    return this.put(`/admin/performer-categories/${id}`, payload);\n  }\n\n  delete(id) {\n    return this.del(`/admin/performer-categories/${id}`);\n  }\n\n}\nexport const performerCategoryService = new PerformerCategoryService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/perfomer-category.service.ts"],"names":["APIRequest","PerformerCategoryService","create","payload","post","search","query","get","buildUrl","findById","id","update","put","delete","del","performerCategoryService"],"mappings":"AAKA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,wBAAN,SAAuCD,UAAvC,CAAkD;AACvDE,EAAAA,MAAM,CAACC,OAAD,EAAoC;AACxC,WAAO,KAAKC,IAAL,CAAU,6BAAV,EAAyCD,OAAzC,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACC,KAAD,EAAkC;AACtC,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,oCAAd,EAAoDF,KAApD,CADK,CAAP;AAGD;;AAEDG,EAAAA,QAAQ,CAACC,EAAD,EAAa;AACnB,WAAO,KAAKH,GAAL,CAAU,+BAA8BG,EAAG,OAA3C,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACD,EAAD,EAAaP,OAAb,EAAgD;AACpD,WAAO,KAAKS,GAAL,CAAU,+BAA8BF,EAAG,EAA3C,EAA8CP,OAA9C,CAAP;AACD;;AAEDU,EAAAA,MAAM,CAACH,EAAD,EAAa;AACjB,WAAO,KAAKI,GAAL,CAAU,+BAA8BJ,EAAG,EAA3C,CAAP;AACD;;AArBsD;AAwBzD,OAAO,MAAMK,wBAAwB,GAAG,IAAId,wBAAJ,EAAjC","sourcesContent":["import {\n  IPerformerCategoryCreate,\n  IPerformerCategoryUpdate,\n  IPerformerCategorySearch\n} from 'src/interfaces';\nimport { APIRequest } from './api-request';\n\nexport class PerformerCategoryService extends APIRequest {\n  create(payload: IPerformerCategoryCreate) {\n    return this.post('/admin/performer-categories', payload);\n  }\n\n  search(query: IPerformerCategorySearch) {\n    return this.get(\n      this.buildUrl('/admin/performer-categories/search', query as any)\n    );\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/performer-categories/${id}/view`);\n  }\n\n  update(id: string, payload: IPerformerCategoryUpdate) {\n    return this.put(`/admin/performer-categories/${id}`, payload);\n  }\n\n  delete(id: string) {\n    return this.del(`/admin/performer-categories/${id}`);\n  }\n}\n\nexport const performerCategoryService = new PerformerCategoryService();\n"]},"metadata":{},"sourceType":"module"}