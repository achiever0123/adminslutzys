{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { getGlobalConfig } from 'src/services';\nimport { APIRequest } from './api-request';\nexport var PerformerService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PerformerService, _APIRequest);\n\n  var _super = _createSuper(PerformerService);\n\n  function PerformerService() {\n    _classCallCheck(this, PerformerService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PerformerService, [{\n    key: \"create\",\n    value: function create(payload) {\n      return this.post('/admin/performers', payload);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/admin/performers/\".concat(id), payload);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/admin/performers/search', query));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/admin/performers/\".concat(id, \"/view\"));\n    }\n  }, {\n    key: \"getUploadDocumentUrl\",\n    value: function getUploadDocumentUrl() {\n      return \"\".concat(getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT, \"/admin/performers/documents/upload\");\n    }\n  }, {\n    key: \"getAvatarUploadUrl\",\n    value: function getAvatarUploadUrl() {\n      return \"\".concat(getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT, \"/admin/performers/avatar/upload\");\n    }\n  }, {\n    key: \"getCoverUploadUrl\",\n    value: function getCoverUploadUrl() {\n      return \"\".concat(getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT, \"/admin/performers/cover/upload\");\n    }\n  }, {\n    key: \"updatePaymentGatewaySetting\",\n    value: function updatePaymentGatewaySetting(id, payload) {\n      return this.put(\"/admin/performers/\".concat(id, \"/payment-gateway-settings\"), payload);\n    }\n  }, {\n    key: \"updateCommissionSetting\",\n    value: function updateCommissionSetting(id, payload) {\n      return this.put(\"/admin/performers/\".concat(id, \"/commission-settings\"), payload);\n    }\n  }, {\n    key: \"updateBankingSetting\",\n    value: function updateBankingSetting(id, payload) {\n      return this.put(\"/admin/performers/\".concat(id, \"/banking-settings\"), payload);\n    }\n  }]);\n\n  return PerformerService;\n}(APIRequest);\nexport var performerService = new PerformerService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/performer.service.ts"],"names":["getGlobalConfig","APIRequest","PerformerService","payload","post","id","put","query","get","buildUrl","NEXT_PUBLIC_API_ENDPOINT","performerService"],"mappings":";;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,WAAaC,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBAAOC,OAAP,EAAqB;AACnB,aAAO,KAAKC,IAAL,CAAU,mBAAV,EAA+BD,OAA/B,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,gBAAOE,EAAP,EAAmBF,OAAnB,EAAiC;AAC/B,aAAO,KAAKG,GAAL,6BAA8BD,EAA9B,GAAoCF,OAApC,CAAP;AACD;AAPH;AAAA;AAAA,WASE,gBAAOI,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,0BAAd,EAA0CF,KAA1C,CAAT,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,kBAASF,EAAT,EAAqB;AACnB,aAAO,KAAKG,GAAL,6BAA8BH,EAA9B,WAAP;AACD;AAfH;AAAA;AAAA,WAiBE,gCAAuB;AACrB,uBAAUL,eAAe,GAAGU,wBAA5B;AACD;AAnBH;AAAA;AAAA,WAqBE,8BAAqB;AACnB,uBAAUV,eAAe,GAAGU,wBAA5B;AACD;AAvBH;AAAA;AAAA,WAyBE,6BAAoB;AAClB,uBAAUV,eAAe,GAAGU,wBAA5B;AACD;AA3BH;AAAA;AAAA,WA6BE,qCAA4BL,EAA5B,EAAwCF,OAAxC,EAAsD;AACpD,aAAO,KAAKG,GAAL,6BAA8BD,EAA9B,gCAA6DF,OAA7D,CAAP;AACD;AA/BH;AAAA;AAAA,WAiCE,iCAAwBE,EAAxB,EAAoCF,OAApC,EAAkD;AAChD,aAAO,KAAKG,GAAL,6BAA8BD,EAA9B,2BAAwDF,OAAxD,CAAP;AACD;AAnCH;AAAA;AAAA,WAqCE,8BAAqBE,EAArB,EAAiCF,OAAjC,EAA+C;AAC7C,aAAO,KAAKG,GAAL,6BAA8BD,EAA9B,wBAAqDF,OAArD,CAAP;AACD;AAvCH;;AAAA;AAAA,EAAsCF,UAAtC;AA0CA,OAAO,IAAMU,gBAAgB,GAAG,IAAIT,gBAAJ,EAAzB","sourcesContent":["import { getGlobalConfig } from 'src/services';\nimport { APIRequest } from './api-request';\n\nexport class PerformerService extends APIRequest {\n  create(payload: any) {\n    return this.post('/admin/performers', payload);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/admin/performers/${id}`, payload);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/admin/performers/search', query));\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/performers/${id}/view`);\n  }\n\n  getUploadDocumentUrl() {\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/performers/documents/upload`;\n  }\n\n  getAvatarUploadUrl() {\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/performers/avatar/upload`;\n  }\n\n  getCoverUploadUrl() {\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/performers/cover/upload`;\n  }\n\n  updatePaymentGatewaySetting(id: string, payload: any) {\n    return this.put(`/admin/performers/${id}/payment-gateway-settings`, payload);\n  }\n\n  updateCommissionSetting(id: string, payload: any) {\n    return this.put(`/admin/performers/${id}/commission-settings`, payload);\n  }\n\n  updateBankingSetting(id: string, payload: any) {\n    return this.put(`/admin/performers/${id}/banking-settings`, payload);\n  }\n}\n\nexport const performerService = new PerformerService();\n"]},"metadata":{},"sourceType":"module"}