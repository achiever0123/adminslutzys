{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var UtilsService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(UtilsService, _APIRequest);\n\n  var _super = _createSuper(UtilsService);\n\n  function UtilsService() {\n    var _this;\n\n    _classCallCheck(this, UtilsService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_countries\", []);\n\n    return _this;\n  }\n\n  _createClass(UtilsService, [{\n    key: \"countriesList\",\n    value: function () {\n      var _countriesList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._countries.length) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._countries);\n\n              case 2:\n                _context.next = 4;\n                return this.get('/countries/list');\n\n              case 4:\n                resp = _context.sent;\n                this._countries = resp;\n                return _context.abrupt(\"return\", resp);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function countriesList() {\n        return _countriesList.apply(this, arguments);\n      }\n\n      return countriesList;\n    }()\n  }, {\n    key: \"statesList\",\n    value: function () {\n      var _statesList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(countryCode) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.get(\"/states/\".concat(countryCode));\n\n              case 2:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function statesList(_x) {\n        return _statesList.apply(this, arguments);\n      }\n\n      return statesList;\n    }()\n  }, {\n    key: \"citiesList\",\n    value: function () {\n      var _citiesList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(countryCode, state) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.get(\"/cities/\".concat(countryCode, \"/\").concat(state));\n\n              case 2:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function citiesList(_x2, _x3) {\n        return _citiesList.apply(this, arguments);\n      }\n\n      return citiesList;\n    }()\n  }, {\n    key: \"languagesList\",\n    value: function languagesList() {\n      return this.get('/languages/list');\n    }\n  }, {\n    key: \"phoneCodesList\",\n    value: function phoneCodesList() {\n      return this.get('/phone-codes/list');\n    }\n  }, {\n    key: \"statistics\",\n    value: function statistics() {\n      return this.get('/statistics/admin');\n    }\n  }, {\n    key: \"bodyInfo\",\n    value: function bodyInfo() {\n      return this.get('/user-additional');\n    }\n  }]);\n\n  return UtilsService;\n}(APIRequest);\nexport var utilsService = new UtilsService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/utils.service.ts"],"names":["APIRequest","UtilsService","_countries","length","get","resp","countryCode","state","utilsService"],"mappings":";;;;;;;;;;;;;;AACA,SAASA,UAAT,QAAsC,eAAtC;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,iEACuB,EADvB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oFAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAKC,UAAL,CAAgBC,MADtB;AAAA;AAAA;AAAA;;AAAA,iDAEW,KAAKD,UAFhB;;AAAA;AAAA;AAAA,uBAIqB,KAAKE,GAAL,CAAS,iBAAT,CAJrB;;AAAA;AAIQC,gBAAAA,IAJR;AAKE,qBAAKH,UAAL,GAAkBG,IAAlB;AALF,iDAMSA,IANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAYE,kBAAiBC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqB,KAAKF,GAAL,mBAAoBE,WAApB,EADrB;;AAAA;AACQD,gBAAAA,IADR;AAAA,kDAESA,IAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAiBE,kBAAiBC,WAAjB,EAAsCC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqB,KAAKH,GAAL,mBAAoBE,WAApB,cAAmCC,KAAnC,EADrB;;AAAA;AACQF,gBAAAA,IADR;AAAA,kDAESA,IAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAsBE,yBAAgD;AAC9C,aAAO,KAAKD,GAAL,CAAS,iBAAT,CAAP;AACD;AAxBH;AAAA;AAAA,WA0BE,0BAAkD;AAChD,aAAO,KAAKA,GAAL,CAAS,mBAAT,CAAP;AACD;AA5BH;AAAA;AAAA,WA8BE,sBAAsC;AACpC,aAAO,KAAKA,GAAL,CAAS,mBAAT,CAAP;AACD;AAhCH;AAAA;AAAA,WAkCE,oBAAW;AACT,aAAO,KAAKA,GAAL,CAAS,kBAAT,CAAP;AACD;AApCH;;AAAA;AAAA,EAAkCJ,UAAlC;AAuCA,OAAO,IAAMQ,YAAY,GAAG,IAAIP,YAAJ,EAArB","sourcesContent":["import { ILangguges, IPhoneCodes } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class UtilsService extends APIRequest {\n  private _countries = [] as any;\n\n  async countriesList() {\n    if (this._countries.length) {\n      return this._countries;\n    }\n    const resp = await this.get('/countries/list');\n    this._countries = resp;\n    return resp;\n  }\n\n  async statesList(countryCode: string) {\n    const resp = await this.get(`/states/${countryCode}`);\n    return resp;\n  }\n\n  async citiesList(countryCode: string, state: string) {\n    const resp = await this.get(`/cities/${countryCode}/${state}`);\n    return resp;\n  }\n\n  languagesList(): Promise<IResponse<ILangguges>> {\n    return this.get('/languages/list');\n  }\n\n  phoneCodesList(): Promise<IResponse<IPhoneCodes>> {\n    return this.get('/phone-codes/list');\n  }\n\n  statistics(): Promise<IResponse<any>> {\n    return this.get('/statistics/admin');\n  }\n\n  bodyInfo() {\n    return this.get('/user-additional');\n  }\n}\n\nexport const utilsService = new UtilsService();\n"]},"metadata":{},"sourceType":"module"}