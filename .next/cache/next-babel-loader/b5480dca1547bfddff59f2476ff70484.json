{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var PhotoService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PhotoService, _APIRequest);\n\n  var _super = _createSuper(PhotoService);\n\n  function PhotoService() {\n    _classCallCheck(this, PhotoService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PhotoService, [{\n    key: \"uploadPhoto\",\n    value: function uploadPhoto(file, payload, onProgress) {\n      return this.upload('/admin/performer-assets/photos/upload', [{\n        fieldname: 'photo',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/admin/performer-assets/photos/search', query));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/admin/performer-assets/photos/\".concat(id, \"/view\"));\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/admin/performer-assets/photos/\".concat(id), payload);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/admin/performer-assets/photos/\".concat(id));\n    }\n  }]);\n\n  return PhotoService;\n}(APIRequest);\nexport var photoService = new PhotoService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/photo.service.ts"],"names":["APIRequest","PhotoService","file","payload","onProgress","upload","fieldname","customData","query","get","buildUrl","id","put","del","photoService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,qBAAYC,IAAZ,EAAwBC,OAAxB,EAAsCC,UAAtC,EAA6D;AAC3D,aAAO,KAAKC,MAAL,CACL,uCADK,EAEL,CACE;AACEC,QAAAA,SAAS,EAAE,OADb;AAEEJ,QAAAA,IAAI,EAAJA;AAFF,OADF,CAFK,EAQL;AACEE,QAAAA,UAAU,EAAVA,UADF;AAEEG,QAAAA,UAAU,EAAEJ;AAFd,OARK,CAAP;AAaD;AAfH;AAAA;AAAA,WAiBE,gBAAOK,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,uCAAd,EAAuDF,KAAvD,CADK,CAAP;AAGD;AArBH;AAAA;AAAA,WAuBE,kBAASG,EAAT,EAAqB;AACnB,aAAO,KAAKF,GAAL,0CAA2CE,EAA3C,WAAP;AACD;AAzBH;AAAA;AAAA,WA2BE,gBAAOA,EAAP,EAAmBR,OAAnB,EAAiC;AAC/B,aAAO,KAAKS,GAAL,0CAA2CD,EAA3C,GAAiDR,OAAjD,CAAP;AACD;AA7BH;AAAA;AAAA,WA+BE,iBAAOQ,EAAP,EAAmB;AACjB,aAAO,KAAKE,GAAL,0CAA2CF,EAA3C,EAAP;AACD;AAjCH;;AAAA;AAAA,EAAkCX,UAAlC;AAoCA,OAAO,IAAMc,YAAY,GAAG,IAAIb,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class PhotoService extends APIRequest {\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/admin/performer-assets/photos/upload',\n      [\n        {\n          fieldname: 'photo',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/admin/performer-assets/photos/search', query)\n    );\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/performer-assets/photos/${id}/view`);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/admin/performer-assets/photos/${id}`, payload);\n  }\n\n  delete(id: string) {\n    return this.del(`/admin/performer-assets/photos/${id}`);\n  }\n}\n\nexport const photoService = new PhotoService();\n"]},"metadata":{},"sourceType":"module"}