{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport cookie from 'js-cookie';\nimport { APIRequest, TOKEN } from './api-request';\nexport var AuthService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(AuthService, _APIRequest);\n\n  var _super = _createSuper(AuthService);\n\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.post('/auth/login', data));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      cookie.set(TOKEN, token);\n      this.setAuthHeaderToken(token);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      var token = cookie.get(TOKEN);\n      return token;\n    }\n  }, {\n    key: \"removeToken\",\n    value: function removeToken() {\n      cookie.remove(TOKEN);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(password, userId, source) {\n      var url = userId ? '/auth/users/password' : '/auth/users/password';\n      return this.put(url, {\n        userId: userId,\n        password: password,\n        source: source\n      });\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(data) {\n      return this.post('/auth/users/forgot', data);\n    }\n  }]);\n\n  return AuthService;\n}(APIRequest);\nexport var authService = new AuthService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/auth.service.ts"],"names":["cookie","APIRequest","TOKEN","AuthService","data","post","token","set","setAuthHeaderToken","get","remove","password","userId","source","url","put","authService"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4EACE,iBAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,iDACS,KAAKC,IAAL,CAAU,aAAV,EAAyBD,IAAzB,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,kBAASE,KAAT,EAA8B;AAC5BN,MAAAA,MAAM,CAACO,GAAP,CAAWL,KAAX,EAAkBI,KAAlB;AACA,WAAKE,kBAAL,CAAwBF,KAAxB;AACD;AARH;AAAA;AAAA,WAUE,oBAAmB;AACjB,UAAMA,KAAK,GAAGN,MAAM,CAACS,GAAP,CAAWP,KAAX,CAAd;AACA,aAAOI,KAAP;AACD;AAbH;AAAA;AAAA,WAeE,uBAAoB;AAClBN,MAAAA,MAAM,CAACU,MAAP,CAAcR,KAAd;AACD;AAjBH;AAAA;AAAA,WAmBE,wBAAeS,QAAf,EAAiCC,MAAjC,EAAkDC,MAAlD,EAAmE;AACjE,UAAMC,GAAG,GAAGF,MAAM,GAAG,sBAAH,GAA4B,sBAA9C;AACA,aAAO,KAAKG,GAAL,CAASD,GAAT,EAAc;AAAEF,QAAAA,MAAM,EAANA,MAAF;AAAUD,QAAAA,QAAQ,EAARA,QAAV;AAAoBE,QAAAA,MAAM,EAANA;AAApB,OAAd,CAAP;AACD;AAtBH;AAAA;AAAA,WAwBE,uBAAcT,IAAd,EAAoB;AAClB,aAAO,KAAKC,IAAL,CAAU,oBAAV,EAAgCD,IAAhC,CAAP;AACD;AA1BH;;AAAA;AAAA,EAAiCH,UAAjC;AA6BA,OAAO,IAAMe,WAAW,GAAG,IAAIb,WAAJ,EAApB","sourcesContent":["import cookie from 'js-cookie';\nimport { ILogin } from 'src/interfaces';\nimport { APIRequest, TOKEN } from './api-request';\n\nexport class AuthService extends APIRequest {\n  public async login(data: ILogin) {\n    return this.post('/auth/login', data);\n  }\n\n  setToken(token: string): void {\n    cookie.set(TOKEN, token);\n    this.setAuthHeaderToken(token);\n  }\n\n  getToken(): string {\n    const token = cookie.get(TOKEN);\n    return token;\n  }\n\n  removeToken(): void {\n    cookie.remove(TOKEN);\n  }\n\n  updatePassword(password: string, userId?: string, source?: string) {\n    const url = userId ? '/auth/users/password' : '/auth/users/password';\n    return this.put(url, { userId, password, source });\n  }\n\n  resetPassword(data) {\n    return this.post('/auth/users/forgot', data);\n  }\n}\n\nexport const authService = new AuthService();\n"]},"metadata":{},"sourceType":"module"}