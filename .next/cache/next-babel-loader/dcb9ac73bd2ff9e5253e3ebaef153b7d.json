{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-nested-ternary */\nimport React, { PureComponent } from 'react';\nimport { Layout, Switch } from 'antd';\nimport Link from 'next/link';\nimport { getGlobalConfig } from 'src/services';\nimport ScrollBar from '../base/scroll-bar';\nimport { SiderMenu } from './menu';\nimport './sider.less';\n\nvar Sider = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Sider, _PureComponent);\n\n  var _super = _createSuper(Sider);\n\n  function Sider() {\n    _classCallCheck(this, Sider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Sider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          collapsed = _this$props.collapsed,\n          theme = _this$props.theme,\n          isMobile = _this$props.isMobile,\n          logo = _this$props.logo,\n          siteName = _this$props.siteName,\n          onThemeChange = _this$props.onThemeChange,\n          menus = _this$props.menus;\n      return __jsx(Layout.Sider, {\n        width: 256,\n        breakpoint: \"lg\",\n        trigger: null,\n        collapsible: true,\n        collapsed: collapsed,\n        className: \"slider\"\n      }, __jsx(\"div\", {\n        className: \"brand\"\n      }, __jsx(\"div\", {\n        className: \"logo\"\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", null, logo ? __jsx(\"img\", {\n        alt: \"logo\",\n        src: logo\n      }) : siteName ? __jsx(\"h1\", null, siteName) : __jsx(\"h1\", null, \"Admin Panel\"))))), __jsx(\"div\", {\n        className: \"menuContainer\"\n      }, __jsx(ScrollBar, {\n        options: {\n          // Disabled horizontal scrolling, https://github.com/utatti/perfect-scrollbar#options\n          suppressScrollX: true\n        }\n      }, __jsx(SiderMenu, {\n        menus: menus,\n        theme: theme,\n        isMobile: isMobile\n      }))), !collapsed && __jsx(\"div\", {\n        className: \"switchTheme\"\n      }, __jsx(\"span\", null, __jsx(\"span\", null, \"v\", getGlobalConfig().NEXT_PUBLIC_BUILD_VERSION)), __jsx(Switch, {\n        onChange: onThemeChange && onThemeChange.bind(this, theme === 'dark' ? 'light' : 'dark'),\n        defaultChecked: theme === 'dark',\n        checkedChildren: \"Dark\",\n        unCheckedChildren: \"Light\"\n      })));\n    }\n  }]);\n\n  return Sider;\n}(PureComponent);\n\nexport default Sider;","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/components/common/layout/sider.tsx"],"names":["React","PureComponent","Layout","Switch","Link","getGlobalConfig","ScrollBar","SiderMenu","Sider","props","collapsed","theme","isMobile","logo","siteName","onThemeChange","menus","suppressScrollX","NEXT_PUBLIC_BUILD_VERSION","bind"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,cAAP;;IAYMC,K;;;;;;;;;;;;;WACJ,kBAAS;AACP,wBAEI,KAAKC,KAFT;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UACaC,KADb,eACaA,KADb;AAAA,UACoBC,QADpB,eACoBA,QADpB;AAAA,UAC8BC,IAD9B,eAC8BA,IAD9B;AAAA,UACoCC,QADpC,eACoCA,QADpC;AAAA,UAC8CC,aAD9C,eAC8CA,aAD9C;AAAA,UAC6DC,KAD7D,eAC6DA,KAD7D;AAGA,aACE,MAAC,MAAD,CAAQ,KAAR;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,UAAU,EAAC,IAFb;AAGE,QAAA,OAAO,EAAE,IAHX;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,SAAS,EAAEN,SALb;AAME,QAAA,SAAS,EAAC;AANZ,SAQE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SAAe,iBAAIG,IAAI,GAAG;AAAK,QAAA,GAAG,EAAC,MAAT;AAAgB,QAAA,GAAG,EAAEA;AAArB,QAAH,GAAmCC,QAAQ,GAAG,kBAAKA,QAAL,CAAH,GAAyB,gCAA5E,CAAf,CADF,CADF,CARF,EAcE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,SAAD;AACE,QAAA,OAAO,EAAE;AACP;AACAG,UAAAA,eAAe,EAAE;AAFV;AADX,SAME,MAAC,SAAD;AACE,QAAA,KAAK,EAAED,KADT;AAEE,QAAA,KAAK,EAAEL,KAFT;AAGE,QAAA,QAAQ,EAAEC;AAHZ,QANF,CADF,CAdF,EA4BG,CAACF,SAAD,IACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBACE,yBAEGL,eAAe,GAAGa,yBAFrB,CADF,CADF,EAOE,MAAC,MAAD;AACE,QAAA,QAAQ,EAAEH,aAAa,IAAIA,aAAa,CAACI,IAAd,CACzB,IADyB,EAEzBR,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAFJ,CAD7B;AAKE,QAAA,cAAc,EAAEA,KAAK,KAAK,MAL5B;AAME,QAAA,eAAe,EAAC,MANlB;AAOE,QAAA,iBAAiB,EAAC;AAPpB,QAPF,CA7BJ,CADF;AAkDD;;;;EAvDiBV,a;;AA0DpB,eAAeO,KAAf","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React, { PureComponent } from 'react';\nimport { Layout, Switch } from 'antd';\nimport Link from 'next/link';\nimport { getGlobalConfig } from 'src/services';\nimport ScrollBar from '../base/scroll-bar';\nimport { SiderMenu } from './menu';\nimport './sider.less';\n\ninterface ISiderProps {\n  collapsed?: boolean;\n  theme?: string;\n  isMobile?: boolean;\n  logo?: string;\n  siteName?: string;\n  onThemeChange?: Function\n  menus?: any;\n}\n\nclass Sider extends PureComponent<ISiderProps> {\n  render() {\n    const {\n      collapsed, theme, isMobile, logo, siteName, onThemeChange, menus\n    } = this.props;\n    return (\n      <Layout.Sider\n        width={256}\n        breakpoint=\"lg\"\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n        className=\"slider\"\n      >\n        <div className=\"brand\">\n          <div className=\"logo\">\n            <Link href=\"/\"><a>{logo ? <img alt=\"logo\" src={logo} /> : siteName ? <h1>{siteName}</h1> : <h1>Admin Panel</h1>}</a></Link>\n          </div>\n        </div>\n\n        <div className=\"menuContainer\">\n          <ScrollBar\n            options={{\n              // Disabled horizontal scrolling, https://github.com/utatti/perfect-scrollbar#options\n              suppressScrollX: true\n            }}\n          >\n            <SiderMenu\n              menus={menus}\n              theme={theme}\n              isMobile={isMobile}\n            />\n          </ScrollBar>\n        </div>\n        {!collapsed && (\n          <div className=\"switchTheme\">\n            <span>\n              <span>\n                v\n                {getGlobalConfig().NEXT_PUBLIC_BUILD_VERSION}\n              </span>\n            </span>\n            <Switch\n              onChange={onThemeChange && onThemeChange.bind(\n                this,\n                theme === 'dark' ? 'light' : 'dark'\n              )}\n              defaultChecked={theme === 'dark'}\n              checkedChildren=\"Dark\"\n              unCheckedChildren=\"Light\"\n            />\n          </div>\n        )}\n      </Layout.Sider>\n    );\n  }\n}\n\nexport default Sider;\n"]},"metadata":{},"sourceType":"module"}