{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { getGlobalConfig } from 'src/services';\nimport { APIRequest } from './api-request';\nexport var UserService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(UserService, _APIRequest);\n\n  var _super = _createSuper(UserService);\n\n  function UserService() {\n    _classCallCheck(this, UserService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UserService, [{\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/users/me', headers);\n    }\n  }, {\n    key: \"updateMe\",\n    value: function updateMe(payload) {\n      return this.put('/users', payload);\n    }\n  }, {\n    key: \"create\",\n    value: function create(payload) {\n      return this.post('/admin/users', payload);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/admin/users/\".concat(id), payload);\n    }\n  }, {\n    key: \"getAvatarUploadUrl\",\n    value: function getAvatarUploadUrl(userId) {\n      if (userId) {\n        return \"\".concat(getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT, \"/admin/users/\").concat(userId, \"/avatar/upload\");\n      }\n\n      return \"\".concat(getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT, \"/users/avatar/upload\");\n    }\n  }, {\n    key: \"uploadAvatarUser\",\n    value: function uploadAvatarUser(file, userId) {\n      return this.upload(\"/admin/users/\".concat(userId, \"/avatar/upload\"), [{\n        file: file,\n        fieldname: 'avatar'\n      }]);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/admin/users/search', query));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/admin/users/\".concat(id, \"/view\"));\n    }\n  }]);\n\n  return UserService;\n}(APIRequest);\nexport var userService = new UserService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/user.service.ts"],"names":["getGlobalConfig","APIRequest","UserService","headers","get","payload","put","post","id","userId","NEXT_PUBLIC_API_ENDPOINT","file","upload","fieldname","query","buildUrl","userService"],"mappings":";;;;;;;;;;AACA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,UAAT,QAAsC,eAAtC;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,YAAGC,OAAH,EAAmE;AACjE,aAAO,KAAKC,GAAL,CAAS,WAAT,EAAsBD,OAAtB,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,kBAASE,OAAT,EAAuB;AACrB,aAAO,KAAKC,GAAL,CAAS,QAAT,EAAmBD,OAAnB,CAAP;AACD;AAPH;AAAA;AAAA,WASE,gBAAOA,OAAP,EAAqB;AACnB,aAAO,KAAKE,IAAL,CAAU,cAAV,EAA0BF,OAA1B,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,gBAAOG,EAAP,EAAmBH,OAAnB,EAAiC;AAC/B,aAAO,KAAKC,GAAL,wBAAyBE,EAAzB,GAA+BH,OAA/B,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,4BAAmBI,MAAnB,EAAoC;AAClC,UAAIA,MAAJ,EAAY;AACV,yBAAUT,eAAe,GAAGU,wBAA5B,0BAAoED,MAApE;AACD;;AACD,uBAAUT,eAAe,GAAGU,wBAA5B;AACD;AAtBH;AAAA;AAAA,WAwBE,0BAAiBC,IAAjB,EAA6BF,MAA7B,EAA8C;AAC5C,aAAO,KAAKG,MAAL,wBAA4BH,MAA5B,qBAAoD,CACzD;AAAEE,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,SAAS,EAAE;AAAnB,OADyD,CAApD,CAAP;AAGD;AA5BH;AAAA;AAAA,WA8BE,gBAAOC,KAAP,EAAuC;AACrC,aAAO,KAAKV,GAAL,CAAS,KAAKW,QAAL,CAAc,qBAAd,EAAqCD,KAArC,CAAT,CAAP;AACD;AAhCH;AAAA;AAAA,WAkCE,kBAASN,EAAT,EAAqB;AACnB,aAAO,KAAKJ,GAAL,wBAAyBI,EAAzB,WAAP;AACD;AApCH;;AAAA;AAAA,EAAiCP,UAAjC;AAuCA,OAAO,IAAMe,WAAW,GAAG,IAAId,WAAJ,EAApB","sourcesContent":["import { IUser } from 'src/interfaces';\nimport { getGlobalConfig } from 'src/services';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class UserService extends APIRequest {\n  me(headers?: { [key: string]: string }): Promise<IResponse<IUser>> {\n    return this.get('/users/me', headers);\n  }\n\n  updateMe(payload: any) {\n    return this.put('/users', payload);\n  }\n\n  create(payload: any) {\n    return this.post('/admin/users', payload);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/admin/users/${id}`, payload);\n  }\n\n  getAvatarUploadUrl(userId?: string) {\n    if (userId) {\n      return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/admin/users/${userId}/avatar/upload`;\n    }\n    return `${getGlobalConfig().NEXT_PUBLIC_API_ENDPOINT}/users/avatar/upload`;\n  }\n\n  uploadAvatarUser(file: File, userId?: string) {\n    return this.upload(`/admin/users/${userId}/avatar/upload`, [\n      { file, fieldname: 'avatar' }\n    ]);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/admin/users/search', query));\n  }\n\n  findById(id: string) {\n    return this.get(`/admin/users/${id}/view`);\n  }\n}\n\nexport const userService = new UserService();\n"]},"metadata":{},"sourceType":"module"}