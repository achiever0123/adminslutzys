{"ast":null,"code":"import cookie from 'js-cookie';\nimport { APIRequest, TOKEN } from './api-request';\nexport class AuthService extends APIRequest {\n  async login(data) {\n    return this.post('/auth/login', data);\n  }\n\n  setToken(token) {\n    cookie.set(TOKEN, token);\n    this.setAuthHeaderToken(token);\n  }\n\n  getToken() {\n    const token = cookie.get(TOKEN);\n    return token;\n  }\n\n  removeToken() {\n    cookie.remove(TOKEN);\n  }\n\n  updatePassword(password, userId, source) {\n    const url = userId ? '/auth/users/password' : '/auth/users/password';\n    return this.put(url, {\n      userId,\n      password,\n      source\n    });\n  }\n\n  resetPassword(data) {\n    return this.post('/auth/users/forgot', data);\n  }\n\n}\nexport const authService = new AuthService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/auth.service.ts"],"names":["cookie","APIRequest","TOKEN","AuthService","login","data","post","setToken","token","set","setAuthHeaderToken","getToken","get","removeToken","remove","updatePassword","password","userId","source","url","put","resetPassword","authService"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,OAAO,MAAMC,WAAN,SAA0BF,UAA1B,CAAqC;AACxB,QAALG,KAAK,CAACC,IAAD,EAAe;AAC/B,WAAO,KAAKC,IAAL,CAAU,aAAV,EAAyBD,IAAzB,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAACC,KAAD,EAAsB;AAC5BR,IAAAA,MAAM,CAACS,GAAP,CAAWP,KAAX,EAAkBM,KAAlB;AACA,SAAKE,kBAAL,CAAwBF,KAAxB;AACD;;AAEDG,EAAAA,QAAQ,GAAW;AACjB,UAAMH,KAAK,GAAGR,MAAM,CAACY,GAAP,CAAWV,KAAX,CAAd;AACA,WAAOM,KAAP;AACD;;AAEDK,EAAAA,WAAW,GAAS;AAClBb,IAAAA,MAAM,CAACc,MAAP,CAAcZ,KAAd;AACD;;AAEDa,EAAAA,cAAc,CAACC,QAAD,EAAmBC,MAAnB,EAAoCC,MAApC,EAAqD;AACjE,UAAMC,GAAG,GAAGF,MAAM,GAAG,sBAAH,GAA4B,sBAA9C;AACA,WAAO,KAAKG,GAAL,CAASD,GAAT,EAAc;AAAEF,MAAAA,MAAF;AAAUD,MAAAA,QAAV;AAAoBE,MAAAA;AAApB,KAAd,CAAP;AACD;;AAEDG,EAAAA,aAAa,CAAChB,IAAD,EAAO;AAClB,WAAO,KAAKC,IAAL,CAAU,oBAAV,EAAgCD,IAAhC,CAAP;AACD;;AA1ByC;AA6B5C,OAAO,MAAMiB,WAAW,GAAG,IAAInB,WAAJ,EAApB","sourcesContent":["import cookie from 'js-cookie';\nimport { ILogin } from 'src/interfaces';\nimport { APIRequest, TOKEN } from './api-request';\n\nexport class AuthService extends APIRequest {\n  public async login(data: ILogin) {\n    return this.post('/auth/login', data);\n  }\n\n  setToken(token: string): void {\n    cookie.set(TOKEN, token);\n    this.setAuthHeaderToken(token);\n  }\n\n  getToken(): string {\n    const token = cookie.get(TOKEN);\n    return token;\n  }\n\n  removeToken(): void {\n    cookie.remove(TOKEN);\n  }\n\n  updatePassword(password: string, userId?: string, source?: string) {\n    const url = userId ? '/auth/users/password' : '/auth/users/password';\n    return this.put(url, { userId, password, source });\n  }\n\n  resetPassword(data) {\n    return this.post('/auth/users/forgot', data);\n  }\n}\n\nexport const authService = new AuthService();\n"]},"metadata":{},"sourceType":"module"}