{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { APIRequest } from './api-request';\nexport class UtilsService extends APIRequest {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_countries\", []);\n  }\n\n  async countriesList() {\n    if (this._countries.length) {\n      return this._countries;\n    }\n\n    const resp = await this.get('/countries/list');\n    this._countries = resp;\n    return resp;\n  }\n\n  async statesList(countryCode) {\n    const resp = await this.get(`/states/${countryCode}`);\n    return resp;\n  }\n\n  async citiesList(countryCode, state) {\n    const resp = await this.get(`/cities/${countryCode}/${state}`);\n    return resp;\n  }\n\n  languagesList() {\n    return this.get('/languages/list');\n  }\n\n  phoneCodesList() {\n    return this.get('/phone-codes/list');\n  }\n\n  statistics() {\n    return this.get('/statistics/admin');\n  }\n\n  bodyInfo() {\n    return this.get('/user-additional');\n  }\n\n}\nexport const utilsService = new UtilsService();","map":{"version":3,"sources":["/Volumes/Chorus/__Code Source/Slutzys/creator site/admin/src/services/utils.service.ts"],"names":["APIRequest","UtilsService","countriesList","_countries","length","resp","get","statesList","countryCode","citiesList","state","languagesList","phoneCodesList","statistics","bodyInfo","utilsService"],"mappings":";;AACA,SAASA,UAAT,QAAsC,eAAtC;AAEA,OAAO,MAAMC,YAAN,SAA2BD,UAA3B,CAAsC;AAAA;AAAA;;AAAA,wCACtB,EADsB;AAAA;;AAGxB,QAAbE,aAAa,GAAG;AACpB,QAAI,KAAKC,UAAL,CAAgBC,MAApB,EAA4B;AAC1B,aAAO,KAAKD,UAAZ;AACD;;AACD,UAAME,IAAI,GAAG,MAAM,KAAKC,GAAL,CAAS,iBAAT,CAAnB;AACA,SAAKH,UAAL,GAAkBE,IAAlB;AACA,WAAOA,IAAP;AACD;;AAEe,QAAVE,UAAU,CAACC,WAAD,EAAsB;AACpC,UAAMH,IAAI,GAAG,MAAM,KAAKC,GAAL,CAAU,WAAUE,WAAY,EAAhC,CAAnB;AACA,WAAOH,IAAP;AACD;;AAEe,QAAVI,UAAU,CAACD,WAAD,EAAsBE,KAAtB,EAAqC;AACnD,UAAML,IAAI,GAAG,MAAM,KAAKC,GAAL,CAAU,WAAUE,WAAY,IAAGE,KAAM,EAAzC,CAAnB;AACA,WAAOL,IAAP;AACD;;AAEDM,EAAAA,aAAa,GAAmC;AAC9C,WAAO,KAAKL,GAAL,CAAS,iBAAT,CAAP;AACD;;AAEDM,EAAAA,cAAc,GAAoC;AAChD,WAAO,KAAKN,GAAL,CAAS,mBAAT,CAAP;AACD;;AAEDO,EAAAA,UAAU,GAA4B;AACpC,WAAO,KAAKP,GAAL,CAAS,mBAAT,CAAP;AACD;;AAEDQ,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKR,GAAL,CAAS,kBAAT,CAAP;AACD;;AApC0C;AAuC7C,OAAO,MAAMS,YAAY,GAAG,IAAId,YAAJ,EAArB","sourcesContent":["import { ILangguges, IPhoneCodes } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class UtilsService extends APIRequest {\n  private _countries = [] as any;\n\n  async countriesList() {\n    if (this._countries.length) {\n      return this._countries;\n    }\n    const resp = await this.get('/countries/list');\n    this._countries = resp;\n    return resp;\n  }\n\n  async statesList(countryCode: string) {\n    const resp = await this.get(`/states/${countryCode}`);\n    return resp;\n  }\n\n  async citiesList(countryCode: string, state: string) {\n    const resp = await this.get(`/cities/${countryCode}/${state}`);\n    return resp;\n  }\n\n  languagesList(): Promise<IResponse<ILangguges>> {\n    return this.get('/languages/list');\n  }\n\n  phoneCodesList(): Promise<IResponse<IPhoneCodes>> {\n    return this.get('/phone-codes/list');\n  }\n\n  statistics(): Promise<IResponse<any>> {\n    return this.get('/statistics/admin');\n  }\n\n  bodyInfo() {\n    return this.get('/user-additional');\n  }\n}\n\nexport const utilsService = new UtilsService();\n"]},"metadata":{},"sourceType":"module"}